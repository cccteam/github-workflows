name: Terraform Docs Generation (Reusable)

permissions:
  contents: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      working_dirs:
        description: Comma-separated list of directories containing Terraform configs
        required: true
        type: string
      output_file:
        description: Output file for generated docs
        required: false
        type: string
        default: README.md
      output_method:
        description: Method to apply the generated docs (e.g., replace, inject)
        required: false
        type: string
        default: replace
      git_push:
        description: Whether to push changes back to the PR
        required: false
        type: boolean
        default: true
    secrets:
      terraform_docs_token:
        description: Personal Access Token with repo scope to push changes
        required: true

jobs:
  terraform-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.terraform_docs_token }}

      - name: Check for changed Terraform files
        uses: step-security/changed-files@95b56dadb92a30ca9036f16423fd3c088a71ee94 # v46.0.5
        id: changed-files
        with:
          files: |
            **/*.tf

      - name: Render Terraform docs and push changes
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: terraform-docs/gh-actions@6de6da0cefcc6b4b7a5cbea4d79d97060733093c # v1.4.1
        with:
          working-dir: ${{ inputs.working_dirs }}
          output-file: ${{ inputs.output_file }}
          output-method: ${{ inputs.output_method }}
          git-push: ${{ inputs.git_push }}
          git-push-user-name: github-actions[bot]
          git-push-user-email: github-actions[bot]@users.noreply.github.com
          git-push-token: ${{ secrets.terraform_docs_token }} # Use PAT for push
