name: Angular CI Workflow Template

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '24'
      working-directory:
        description: 'Directory containing Angular projects'
        required: false
        type: string
        default: './gui'
      checks:
        description: 'List of checks to run (build, lint, test)'
        required: false
        type: string
        default: '["build", "lint"]'

jobs:
  angular:
    name: Run Angular checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Find Angular projects
        id: find-projects
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f angular.json ]; then
            # Extract project names from angular.json
            projects=$(jq -r '.projects | keys | @json' angular.json)
            echo "projects=$projects" >> $GITHUB_OUTPUT
            echo "Found Angular projects: $projects"
          else
            echo "projects=[]" >> $GITHUB_OUTPUT
            echo "No angular.json found"
          fi

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: npm ci

      - name: Run checks for each project
        working-directory: ${{ inputs.working-directory }}
        run: |
          projects='${{ steps.find-projects.outputs.projects }}'
          checks='${{ inputs.checks }}'
          echo "Running checks for projects: $projects"
          echo "Checks to run: $checks"

          for project in $(echo $projects | jq -r '.[]'); do
            for check in $(echo $checks | jq -r '.[]'); do
              case $check in
                "lint")
                  echo "::group::Linting $project"
                  npm run lint $project
                  echo "::endgroup::"
                  ;;
                "build")
                  echo "::group::Building $project"
                  npm run build $project
                  echo "::endgroup::"
                  ;;
                "test")
                  echo "::group::Testing $project"
                  npm run test $project -- --watch=false --browsers=ChromeHeadless
                  echo "::endgroup::"
                  ;;
                *)
                  echo "Unknown check type: $check"
                  ;;
              esac
            done
          done
