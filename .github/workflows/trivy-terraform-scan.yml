name: Trivy Terraform Scan (Reusable)

on:
  workflow_call:
    inputs:
      scan_dir:
        description: 'Directory containing Terraform files to check for changes (scanned recursively)'
        required: true
        type: string
      tfvars_file:
        description: 'Path to tfvars file to override default values (optional)'
        required: false
        type: string
      severity:
        description: 'Severity levels to scan (e.g., CRITICAL,HIGH)'
        required: false
        type: string
        default: 'CRITICAL,HIGH'
      exclude_downloaded_modules:
        description: 'Skip scanning downloaded Terraform modules in .terraform directory'
        required: false
        type: boolean
        default: true
      exit_code:
        description: 'Exit code for scan failure (0 to continue, 1 to fail)'
        required: false
        type: string
        default: '1'

jobs:
  trivy-terraform-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git diff to compare with base branch
      - name: Find changed Terraform directories
        id: changed-files
        run: |
          if [ ! -d "${{ inputs.scan_dir }}" ]; then
            echo "Error: Directory ${{ inputs.scan_dir }} does not exist."
            exit 1
          fi
          # Get changed .tf and .tfvars files in scan_dir
          CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRTUXB origin/${{ github.base_ref }}...HEAD | grep -E '\.tf$|\.tfvars$' | grep "^${{ inputs.scan_dir }}" || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No .tf or .tfvars files changed in ${{ inputs.scan_dir }}. Skipping scan."
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "dirs=" >> $GITHUB_OUTPUT
          else
            # Get unique directories of changed files
            CHANGED_DIRS=$(echo "$CHANGED_FILES" | xargs -n 1 dirname | sort -u | tr '\n' ',' | sed 's/,$//')
            echo "Changed Terraform directories: $CHANGED_DIRS"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "dirs=$CHANGED_DIRS" >> $GITHUB_OUTPUT
          fi
      - name: Scan Terraform with Trivy
        if: steps.changed-files.outputs.changed == 'true'
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: 'fs'
          scan-ref: ${{ steps.changed-files.outputs.dirs }}
          format: 'table'
          scanners: 'vuln,secret,misconfig'
          severity: ${{ inputs.severity }}
          exit-code: ${{ inputs.exit_code }}
          tf-vars: ${{ inputs.tfvars_file }}
          skip-dirs: ${{ inputs.exclude_downloaded_modules == 'true' && '.terraform' || '' }}
